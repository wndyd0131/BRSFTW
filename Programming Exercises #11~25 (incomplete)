#include <stdio.h>
#define MAX_SIZE 50

int recursive(int num) {
	if (num == 1)
		return 1;
	else
		return recursive(num - 1)+1;
}
void function_11() {
	int num = 50;
	for (int i = 1; i <= num; i++) {
		printf("%d ", recursive(i));
	}
	printf("\n");
}

int fibo(int num) {
	if (num == 0)
		return 0;
	else if (num == 1)
		return 1;
	else
		return fibo(num - 1) + fibo(num - 2);
}
void function_12() {
	int num;
	printf("Input the number of terms: ");
	scanf("%d", &num);
	for (int i = 1; i <= num; i++) {
		printf("%d ", fibo(i));
	}
	printf("\n");
}

void function_16() {
	int arr[MAX_SIZE];
	int n, i, j, temp;
	printf("Input the number you need for an array: ");
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		printf("Input the number into the array: ");
		scanf("%d", &arr[i]);
	}
	printf("Original version: ");
	for (i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
	i = 0;
	j = n - 1;
	while(i <= j){
		temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		i++;
		j--;
	}
	printf("Reverse version: ");
	for (i = 0; i < n; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
}

void function_17() {
	int arr[MAX_SIZE], count = 0, i, j, k = 0, n;
	int table[MAX_SIZE];
	printf("How many numbers?\n");
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		printf("Input the number: ");
		scanf("%d", &arr[i]);
	}
	for (i = 0; i < n; i++) {
		for (j = 0; j < i; j++) {
			if (table[j] == arr[i])
				break;
			else
				table[k++] = arr[i];
			if (arr[i] == arr[j])
				count += 1;
		}

	}
	printf("Total number of duplicate numbers: %d\n\n", count);
}
void function_18() {
	int arr1[MAX_SIZE], arr2[MAX_SIZE], i, j, num1, num2;
	printf("How many numbers in array1?\n");
	scanf("%d", &num1);
	printf("How many numbers in array2?\n");
	scanf("%d", &num2);
	for (i = 0; i < num1; i++) {
		printf("Input the number in array 1: ");
		scanf("%d", &num1);
	}
	for (i = 0; i < num2; i++) {
		printf("Input the number in array 2: ");
		scanf("%d", &num2);
	}
	for (i = 0; i < num1; i++) {
		for (j = 0; j < num2; j++) {

		}
	}
}


int main() {
	/*
	function_11();
	function_12();
	function_13();
	function_14();
	function_15();
	function_16();
	*/
	function_17();
	function_18();
	return 0;
}
