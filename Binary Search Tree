#include <stdio.h>
#include <stdlib.h>

typedef struct bst {
	int data;
	struct bst *left;
	struct bst *right;
}BST;


BST *root = NULL;


BST *Insert(BST *n, int data) {
	if (n == NULL) {
		n = (BST *)malloc(sizeof(BST));
		n->data = data;
		n->left = n->right = NULL;
		return n;
	}
	else {
		if (n->data > data)
			n->left = Insert(n->left, data);
		else
			n->right = Insert(n->right, data);
	}
	return n;
}

BST *Delete(BST *n, int data) {
	BST *temp;
	if (n == NULL) {
		printf("트리가 비어있습니다.\n");
		return NULL;
	}//뭔지 모르겠음
	if (n->data > data)
		n = n->left;
	else if (n->data < data)
		n = n->right;
	else if (n->left && n->right) {
		temp = temp->right;
		while (temp->left)
			temp = temp->left;
		n->data = temp->data;
		n->right = Delete(n->right, temp->data);
	}
	else {
		if (n->left == NULL) {
			free(n);
			return n->right;
		}
		else {
			free(n);
			return n->left;
		}
	}


}

BST *Search(BST *n, int data) { //수정함 (근데 잘 안됨)

	BST *p = n; //원래 버전은 실행이 잘 안됐으나
	while (p->data != NULL) { //이번에는 실행이 되나, 한 번 하고 그 다음은 안되는..
		if (p->data > data) {
			p = p->left; //각 왼쪽 오른쪽 Search에서 널 확인하는 줄을 위로 옮김
		}
		else {
			p = p->right;
		}
		if (p->data == data) {
			printf("%d를 찾았습니다.\n", p->data);
			return;
		}
	}
} //or return n/ Search(n->left, data)/ Search(n->right, data);

void Print(BST *n) {
	if (n != NULL) {
		printf("%d\n", n->data);
		Print(n->left);
		Print(n->right);
	}
	return;
}


int main() {
	root = Insert(root, 10);
	root = Insert(root, 2);
	Print(root);
	Search(root, 2);
	Search(root, 10);
	Search(root, 10);
	return 0;
}
